#-------------------rocketMq配置信息---------------------------

#客户端配置
#rocketMq.namesrvAddr=192.168.4.52:9876;192.168.4.53:9876;192.168.4.54:9876
    rocketMq.namesrvAddr=192.168.253.178:9876

#---------------生产者默认配置---------------------

#生产者组，保证每个应用唯一性
rocketMq.producerGroup=QuickStartProducer

#生产者实例名称
rocketMq.instanceName=QuickStartProducer

#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数
rocketMq.defaultTopicQueueNums=4

#发送消息超时时间，单位毫秒
rocketMq.sendMsgTimeout=10000

#消息 Body 超过多大开始压缩（Consumer收到消息会自动解压缩），单位字节
rocketMq.compressMsgBodyOverHowmuch=4096

#如果发送消息返回 sendResult，但是sendStatus!=SEND_OK，是否重试发送
rocketMq.retryAnotherBrokerWhenNotStoreOK=false

#客户端限制的消息大小，超过报错，同时服务端也会限制
rocketMq.maxMessageSize=131072

#Broker 回查 Producer 事务状态时， 线程池大小
rocketMq.checkThreadPoolMinSize=1

#Broker 回查 Producer 事务状态时， 线程池大小
rocketMq.checkThreadPoolMaxSize=1

#Broker 回查 Producer 事务状态时，Producer 本地缓冲请求队列大小
rocketMq.checkRequestHoldMax=2000

#---------------消费者默认配置---------------------

#Consumer 组名，多个 Consumer如果属于一个应用， 订阅同样的消息，且消费逻辑一致，则应该将它们归为同一组
rocketMq.consumerGroup=QuickStartConsumer

#Consumer 实例名
rocketMq.consumerinstanceName=QuickStartConsumer

#消息模型，支持以下两种:1、集群消费 2、广播消费
#rocketMq.messageModel=CLUSTERING

#Consumer 启动后，默认从什么位置开始消费
#rocketMq.consumeFromWhere=CONSUME_FROM_LAST_OFFSET

#Rebalance 算法实现策略
#rocketMq.allocateMessageQueueStrategy=AllocateMessageQueueAveragely

#订阅关系
#rocketMq.subscription={}

#消费线程池数量
rocketMq.consumeThreadMin=10

#消费线程池数量
rocketMq.consumeThreadMax=20

#单队列并行消费允许的最大跨度
rocketMq.consumeConcurrentlyMaxSpan=2000

#拉消息本地队列缓存消息最大数
rocketMq.pullThresholdForQueue=1000

#拉消息间隔，由于是长轮询，所以为 0，但是如果应用为了流控，也可以设置大于 0 的值，单位毫秒
rocketMq.pullInterval=0

#批量消费，一次消费多少条消息
rocketMq.consumeMessageBatchMaxSize=1

#批量拉消息，一次最多拉多少条
rocketMq.pullBatchSize=32
